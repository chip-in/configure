{{- if env "JWT_ISSUER_FQDN" }}
server {
  listen       80;
  server_name  {{ env "JWT_ISSUER_FQDN" }};
  root   /usr/share/nginx/html;
  client_max_body_size 20m;
  include /etc/nginx/conf.d/*.conf.server;
  location /JWTIssuer {
    include /etc/nginx/jwt.settings/cors-common.conf;
    include /etc/nginx/conf.d/*.conf.attrs;
  {{- if keyExists "idps" }}
    set $internal_ar 0;
    shib_request /shibauthorizer;
    shib_request_use_headers on;
    include shib_clear_headers;
  {{- else }}
    auth_basic "Restricted";
    auth_basic_user_file htpasswd;
  {{- end }}
    set $issuerconf "jwtIssuer.json";
    content_by_lua_file lua/jwtIssue.lua;
  }
  location /core.JWTUpdate {
    include /etc/nginx/jwt.settings/cors-common.conf;
    include /etc/nginx/conf.d/*.conf.attrs;
    set $verifyconf "jwtVerifier.json";
    set $issuerconf "jwtIssuer.json";
    access_by_lua_file /etc/nginx/lua/jwtUpdateVerify.lua;
    content_by_lua_file /etc/nginx/lua/jwtIssue.lua;
  }
  {{- if keyExists "idps" }}
  # FastCGI authorizer for Shibboleth Auth Request module
  location = /shibauthorizer {
      internal;
      include fastcgi_params;
      fastcgi_pass unix:/var/run/shibboleth/shibauthorizer.sock;
      client_max_body_size 0;
  }
  #FastCGI responder
  location /Shibboleth.sso {
      if ($internal_ar = 1) {
        set $request_uri_ar "$uri$is_args$args";
        set $remote_addr_ar "127.0.0.1";
      }
      fastcgi_param  REQUEST_URI        $request_uri_ar if_not_empty;
      fastcgi_param  REMOTE_ADDR        $remote_addr_ar if_not_empty;
      include fastcgi_params;
      fastcgi_pass unix:/var/run/shibboleth/shibresponder.sock;
  }
  #Resources for the Shibboleth error pages.
  location /shibboleth-sp {
      alias /usr/share/shibboleth/;
  }
  {{- end }}
  location / {
      index  index.html index.htm;
  }

  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
  }

  access_log /var/log/nginx/jwtIssuer.log chip_in_core;
}
{{- end }}

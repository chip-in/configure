log_format chip_in_core  '$time_iso8601($msec):conn=$connection,reqseq="$connection_requests",'
  'reqid=$request_id,ip=$remote_addr,cookie=$http_cookie,setcookie=$sent_http_set_cookie,'
  'user=$remote_user,request="$request",reqlen=$request_length,referer="$http_referer",'
  'ua="$http_user_agent",status=$status,bodylen=$body_bytes_sent,'
  'origin=$http_origin,upsaddr=$upstream_addr,'
  'upstat=$upstream_response_time,upsstatus=$upstream_status,tat=$request_time';

server {
  listen       80;
  server_name  {{ env "CORE_FQDN" }};
  root   /usr/share/nginx/html;
  client_max_body_size 20m;
  client_header_buffer_size 64k;
  large_client_header_buffers 4 64k;
  add_header X-Frame-Options SAMEORIGIN;
  include /etc/nginx/conf.d/*.conf.server;
  ## gzip config
  gzip on;
  gzip_min_length 1000;
  gzip_comp_level 5;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
      text/css
      text/javascript
      text/xml
      text/plain
      text/x-component
      application/javascript
      application/json
      application/xml
      application/rss+xml
      font/truetype
      font/opentype
      application/vnd.ms-fontobject
      image/svg+xml;

  location ~ /[ad]/ {
    include /etc/nginx/conf.d/*.conf.location;
    proxy_pass http://localhost:3000;
    proxy_redirect ~^https?://([^/]+)(?::[0-9]+)?(/.*)$ https://$1:443$2;
    client_max_body_size 20m;
    proxy_read_timeout 630;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Request-ID $request_id;
  }

  location /r {
    include /etc/nginx/conf.d/*.conf.location;
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Request-ID $request_id;
  }

  location /m {
    include /etc/nginx/conf.d/*.conf.location;
    proxy_pass http://localhost:1833;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  {{ range service "hmr" }}
  # {{.|toJSON}}
  location ~ /{{.NodeID}}/([ad]/.*)$ {
      include /etc/nginx/conf.d/*.conf.location;
      proxy_pass http://{{.Address}}:3000/$1;
      proxy_redirect ~^https?://([^/]+)(?::[0-9]+)?/[^/]+(/.*)$ https://$1:443$2;
      client_max_body_size 20m;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Request-ID $request_id;
  }
  location  /{{.NodeID}}/r {
      include /etc/nginx/conf.d/*.conf.location;
      proxy_pass http://{{.Address}}:3000/r;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
  }
  location /{{.NodeID}}/m {
      include /etc/nginx/conf.d/*.conf.location;
      proxy_pass http://{{.Address}}:1833/m;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
  }
  {{ end }}

  {{- if keyExists "jwt" }}
  {{- if env "JWT_ISSUER_FQDN" }}
  location /core.JWTUpdate {
    return 302 $scheme://{{ env "JWT_ISSUER_FQDN" }}$request_uri;
  }
  {{- end }}
  {{- end }}

  location /v1/ {
      include /etc/nginx/conf.d/*.conf.location;
      proxy_pass http://localhost:8500;
      client_max_body_size 20m;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Request-ID $request_id;
      proxy_read_timeout 300;
  }

  location / {
      index  index.html index.htm;
  }

  include /etc/nginx/conf.d/*.conf.logserver;

  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
  }

  access_log /var/log/nginx/chip-in.log chip_in_core;
}
